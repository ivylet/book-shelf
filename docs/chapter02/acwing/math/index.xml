<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>QBook</title><link>http://ivylet.github.io/docs/chapter02/acwing/math/</link><description>Recent content on QBook</description><generator>Hugo -- gohugo.io</generator><atom:link href="http://ivylet.github.io/docs/chapter02/acwing/math/index.xml" rel="self" type="application/rss+xml"/><item><title>其他</title><link>http://ivylet.github.io/docs/chapter02/acwing/math/others/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://ivylet.github.io/docs/chapter02/acwing/math/others/</guid><description> 秦九韶算法 # 使用秦九韶算法可以计算多项式的值，或进制转换。 例子：计算多项式的值。a[i]表示多项式中的x的i次幂的系数。
#include&amp;lt;iostream&amp;gt; using namespace std; int n,x,ans,a[21]; int main(){ cin&amp;gt;&amp;gt;n; for(int i=0;i&amp;lt;=n;i++) cin&amp;gt;&amp;gt;a[i]; cin&amp;gt;&amp;gt;x; ans=a[n]; for(int i=1;i&amp;lt;=n;i++) ans=ans*x+a[n-i]; cout&amp;lt;&amp;lt;ans; return 0; }</description></item><item><title>数论</title><link>http://ivylet.github.io/docs/chapter02/acwing/math/shulun/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://ivylet.github.io/docs/chapter02/acwing/math/shulun/</guid><description>质数 # 针对所有大于1的自然数定义的，只包含1和本身两个约数的自然数叫做质数（素数）。
质数的判定 # 试除法 # bool is_prime(int n){ if(n &amp;lt; 2) return false; for(int i = 2; i &amp;lt;= n ; i++){ if(n % i == 0) return false; } return true; } O(n); 如果i包含其他因子，那么这因子应该是成双成对出现的。比如12的因子有{1,2,3,4,6,12}。 这里只需要遍历成对中的第一个就可以了， 如果n可以被d整除，证明d是n的一个因子，那么另外一个与其对应的因子是n除以n除以d的商。所以我只需要遍历到第一个因子就可以了，即d满足大于n除以d的商，d大于根号n就OK。时间复杂度可以降到根号n。
bool is_prime(int n){ if(n &amp;lt; 2) return false; for(int i = 2; i &amp;lt;= n / i ; i++){ if(n % i == 0) return false; } return true; } O(sqrt(n)); 不使用sqrt(i)可以降低时间复杂度，每次循环都会计算一次。如果使用i * i &amp;lt;= n，则可能存在 i * i溢出风险，变成负值。</description></item></channel></rss>